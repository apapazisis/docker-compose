version: '3'

services:
    nginx:
        image: nginx:alpine
        volumes:
            - ./www:/usr/share/www/html:delegated # declare that the host's www folder contents will mount the html folder of container
            - ./nginx/server.conf:/etc/nginx/conf.d/default.conf # copy an nginx configuration to server container and replace the default
        ports:
            - 8000:80
        links:
            - php
            - db
        environment:
            - NGINX_HOST=${NGINX_HOST}
        restart: always
        extra_hosts:
            - "www.bauservices.test:127.0.0.1"
            - "bauservices.test:127.0.0.1"
    php:
        build: ./php # it specifies the path of Dockerfile (need to run docker-compose build). No need to add image tag
        restart: always
        working_dir: /usr/share/www/html
        volumes:
            - ./www:/usr/share/www/html:delegated
            - ./php/php.ini:/usr/local/etc/php/php.ini:delegated
        links:
            - db
    db:
        image: mysql:5.7.25
        restart: always
        volumes:
            - ./db/dump.sql:/docker-entrypoint-initdb.d/dump.sql # it populate this dump.sql
            - ./db/persist:/var/lib/mysql # when docker-compose down is used and then docker-compose up -d the database will not be affected
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        ports:
            - "7000:3306"
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        restart: always
        ports:
            - "9000:80"
        environment:
            PMA_HOST: db
        depends_on:
            - db
    redis:
        image: redis:4.0-alpine
        restart: always
        volumes:
            - ./redis_data:/data
    ngrok:
        image: wernight/ngrok:latest
        links:
            - nginx
        environment:
            - NGROK_AUTH=7DNADFfe73E8VNhAqVikG_4MiCAurNQpL8EQquD2kCh
            - NGROK_PORT=nginx:80
            - NGROK_REGION=eu
networks:
    app_net:
        driver: bridge
        ipam:
            driver: default
            config:
            - subnet: 192.168.1.0/24
